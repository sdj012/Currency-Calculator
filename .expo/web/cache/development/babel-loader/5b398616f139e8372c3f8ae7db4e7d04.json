{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/List/Options.js\";\nimport React, { useState } from 'react';\nimport { connect, useStore } from 'react-redux';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Tab, Text, Input, Button, SearchBar, Divider } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ListItem } from 'react-native-elements';\nimport configureSet from \"./Utils/CombinationGenerator\";\nimport uuid from 'react-native-uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { testStore } from \"../Store/testSlice\";\nexport function Options(props) {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var options = useSelector(function (state) {\n    return state.test.value;\n  });\n\n  var _useState = useState(props.target),\n      _useState2 = _slicedToArray(_useState, 2),\n      target = _useState2[0],\n      setTarget = _useState2[1];\n\n  var handleChange = function handleChange(text) {\n    setTarget(text);\n    dispatch(testStore(text));\n    console.log(\"test state : \" + options);\n  };\n\n  var returnRenderItem = function returnRenderItem(item) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, React.createElement(ListItem, {\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \" \", item.item.options, \" $\", item.item.price, \" \"))));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"How Many Coins Do You Need?\",\n    onChangeText: handleChange,\n    value: target,\n    lightTheme: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    backgroundColor: '#ffffff',\n    padding: 20,\n    height: 150,\n    marginVertical: 8,\n    marginHorizontal: 0,\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: 32\n  },\n  button: {\n    width: '25%'\n  },\n  tab: {\n    backgroundColor: '#fff'\n  },\n  divider: {\n    backgroundColor: 'blue'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    test: state.value\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    test: function test() {\n      return dispatch(testStore());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/List/Options.js"],"names":["React","useState","connect","useStore","SafeAreaProvider","Tab","Text","Input","Button","SearchBar","Divider","ListItem","configureSet","uuid","useSelector","useDispatch","testStore","Options","props","dispatch","options","state","test","value","target","setTarget","handleChange","text","console","log","returnRenderItem","item","price","styles","container","StyleSheet","create","flex","backgroundColor","padding","height","marginVertical","marginHorizontal","margin","textAlign","title","fontSize","button","width","tab","divider","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect, useStore } from 'react-redux';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Tab,Text,Input,Button, SearchBar, Divider } from 'react-native-elements';\nimport { StyleSheet, SafeAreaView, FlatList, View, TextInput } from 'react-native';\nimport { ListItem } from 'react-native-elements';\nimport configureSet from './Utils/CombinationGenerator';\nimport uuid from 'react-native-uuid';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { testStore } from '../Store/testSlice'\n\nexport function Options(props) {\n  \n  const dispatch = useDispatch()\n  const options = useSelector(state => state.test.value)\n  \n  const [target, setTarget] = useState(props.target);\n\n  // Array of Key&Value Pairs\n  // determine Price: returnPricePerPackage\n  // setData: Calls generateOptions to Retrieve Options Object. Sets Retrieved Object To Current State.\n  // generateOptions: Packages Array Of Numbers, Determines and Adds Price\n  // generateSentence\n  // configureSet -> determines set and passes Set to -> setData\n\n  const handleChange=(text)=>{\n    setTarget(text)\n    dispatch(testStore(text))\n    console.log(\"test state : \" + options)\n  }\n\n  const returnRenderItem=(item)=>{\n\n    return <View>\n    {\n        <ListItem bottomDivider>\n          <ListItem.Content>\n            <ListItem.Title> {item.item.options} ${item.item.price} </ListItem.Title>\n          </ListItem.Content>\n        </ListItem>\n    }\n    </View>\n  }\n\n    return (   \n\n      <>    \n      \n        <SafeAreaProvider>\n          <SafeAreaView style={styles.container}>\n\n            <SearchBar\n            placeholder=\"How Many Coins Do You Need?\"\n            onChangeText={handleChange}\n            value={target}\n            lightTheme=\"true\"\n            />\n\n            {/* <FlatList \n              data={this.state.Options} \n              keyExtractor={item => item.id} \n              renderItem={this.returnRenderItem}>\n            </FlatList> */}\n\n          </SafeAreaView>\n        </SafeAreaProvider>\n      </>\n\n    );\n\n  }\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    // marginTop: '20%',\n    backgroundColor: '#fff',\n  },\n\n  item: {\n    backgroundColor: '#ffffff',\n    padding: 20,\n    height:150,\n    marginVertical: 8,\n    marginHorizontal: 0,\n    margin:'auto',\n    textAlign:'center',\n  },\n\n  title: {\n    fontSize: 32,\n  },\n\n  button:{\n    width: '25%'\n  },\n\n  tab:{\n    backgroundColor:'#fff',\n  },\n\n  divider: {\n    backgroundColor:'blue',\n    // height:1,\n  }\n\n});\n\nconst mapStateToProps = (state) => {\n  return { test: state.value };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    test: () => dispatch(testStore()),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Options);\n"]},"metadata":{},"sourceType":"module"}