{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/Engine.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Header } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ListItem } from 'react-native-elements';\nimport { Tab, Text, Input, Button, SearchBar, Divider } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport uuid from 'react-native-uuid';\n\nvar checkIfFactorOf400 = function checkIfFactorOf400(target) {\n  console.log(\"checkIfFactorOf400\");\n  return 0;\n};\n\nvar checkIfFactorOf800 = function checkIfFactorOf800(target) {\n  console.log(\"checkIfFactorOf800\");\n};\n\nvar checkIfFactorOf1700 = function checkIfFactorOf1700(target) {\n  console.log(\"checkIfFactorOf1700\");\n};\n\nvar Engine = function (_React$Component) {\n  _inherits(Engine, _React$Component);\n\n  var _super = _createSuper(Engine);\n\n  function Engine(props) {\n    var _this;\n\n    _classCallCheck(this, Engine);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (text) {\n      _this.setState({\n        Options: [],\n        recursionOptions: []\n      });\n\n      console.log(text);\n\n      _this.setState({\n        target: text\n      }, function () {\n        this.combineElements(this.state.series, this.state.target);\n      });\n\n      console.log(\"state update: \" + _this.state.target);\n    };\n\n    _this.recursion_determinePrice = function (series) {\n      var total = 0;\n      series.map(function (value) {\n        if (value === 400) total += _this.state.FourHundred;\n        if (value === 800) total += _this.state.EightHundred;\n        if (value === 1700) total += _this.state.OneThousandSevenHundred;\n        console.log(\"recursion_determinePrice: value \" + value + \"total: \" + total);\n      });\n      return total;\n    };\n\n    _this.determinePrice = function (multiplicator, multiplicand) {\n      if (multiplicand == 400) return Math.ceil(multiplicator * 6.49 * 100) / 100;\n      if (multiplicand == 800) return multiplicator * 12.99;\n      if (multiplicand == 1700) return multiplicator * 25.99;\n    };\n\n    _this.createOptionsObject = function (multiplicator, multiplicand) {\n      var uniqueID = uuid.v1();\n      var options = multiplicator + ' x ' + multiplicand;\n\n      var price = _this.determinePrice(multiplicator, multiplicand);\n\n      var optionsObject = {\n        id: uniqueID,\n        options: options,\n        price: price\n      };\n\n      _this.setState({\n        Options: [optionsObject]\n      });\n    };\n\n    _this.generateOptionsByFactors = function (target) {\n      if (target % 400 == 0) {\n        var quotient = target / 400;\n\n        _this.createOptionsObject(quotient, 400);\n      }\n\n      if (target % 800 == 0) {\n        var _quotient = target / 800;\n\n        _this.createOptionsObject(_quotient, 800);\n      }\n\n      if (target % 1700 == 0) {\n        var _quotient2 = target / 1700;\n\n        _this.createOptionsObject(_quotient2, 1700);\n      }\n    };\n\n    _this.setData = function (data) {\n      var array = [{}];\n      data.map(function (set) {\n        console.log(\"setData:Mapping... \" + set);\n        console.log(_this.recursion_generateOptions(set));\n\n        _this.setState(function (prevState) {\n          return {\n            recursionOptions: [].concat(_toConsumableArray(prevState.recursionOptions), [_this.recursion_generateOptions(set)])\n          };\n        }, function () {\n          console.log(\"this.state.recursionOptions: \" + this.state.recursionOptions);\n        });\n      });\n    };\n\n    _this.recursion_generateOptions = function (series) {\n      var array = [];\n      var list = [];\n      console.log(\"recursion_generateOptions series: \" + series);\n      var uniqueID = uuid.v1();\n      var optionsString = \"\";\n\n      var price = _this.recursion_determinePrice(series);\n\n      series.map(function (number) {\n        if (array.findIndex(function (obj) {\n          return obj.value === number;\n        }) === -1) {\n          list.push(number);\n          var grouped = {};\n          grouped.value = number;\n          grouped.count = 1;\n          array.push(grouped);\n        } else {\n          var index = array.findIndex(function (obj) {\n            return obj.value == number;\n          });\n          array[index].count += 1;\n        }\n      });\n      console.log(\"array: \" + JSON.stringify(array));\n      optionsString = _this.returnRenderedOptions(array);\n      var optionsObject = {\n        id: uniqueID,\n        options: optionsString,\n        price: price\n      };\n      console.log(\"optionsObject: \" + optionsObject);\n      return optionsObject;\n    };\n\n    _this.generateOptionsByUniqueSet = function (target) {};\n\n    _this.returnRenderedOptions = function (options) {\n      console.log(\"returnRenderedOptions: \" + JSON.stringify(options));\n      var label = \"\";\n      options.map(function (option) {\n        label += \"\\n\" + option.count + \" of \" + option.value;\n      });\n      console.log(label);\n      return label;\n    };\n\n    _this.returnRenderItem = function (item) {\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 12\n        }\n      }, React.createElement(ListItem, {\n        bottomDivider: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, React.createElement(ListItem.Content, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, React.createElement(ListItem.Title, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, \" \", item.item.options, \" $\", item.item.price, \" \"))));\n    };\n\n    _this.combineElements = function (arr, sum) {\n      var output = [];\n      console.log(\"Target\" + _this.state.target);\n\n      function findCombination(remainder, path, entry) {\n        if (remainder < 0) {\n          console.log(\"Breaking Out of Loop: Negative Remainder: Target: \" + remainder * -1 + \" path: \" + path);\n          output.push(_toConsumableArray(path));\n          return;\n        }\n\n        if (remainder === 0) {\n          output.push(_toConsumableArray(path));\n          return;\n        }\n\n        for (var i = entry; i < arr.length; i++) {\n          findCombination(remainder - arr[i], [].concat(_toConsumableArray(path), [arr[i]]), i);\n        }\n      }\n\n      findCombination(sum, [], 0);\n      console.log(output);\n\n      _this.setData(output);\n\n      return output;\n    };\n\n    _this.componentDidUpdate = function () {\n      console.log(\"component updated. state: \" + _this.state.target);\n    };\n\n    _this.componentDidMount = function () {};\n\n    _this.state = {\n      target: '',\n      series: [400, 800, 1700],\n      FourHundred: 6.49,\n      EightHundred: 12.99,\n      OneThousandSevenHundred: 25.99,\n      Options: [],\n      OptionsWithRemainder: [],\n      recursionOptions: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.generateOptionsByFactors = _this.generateOptionsByFactors.bind(_assertThisInitialized(_this));\n    _this.returnRenderItem = _this.returnRenderItem.bind(_assertThisInitialized(_this));\n    _this.returnRenderedOptions = _this.returnRenderedOptions.bind(_assertThisInitialized(_this));\n    _this.componentDidUpdate = _this.componentDidUpdate.bind(_assertThisInitialized(_this));\n    _this.createOptionsObject = _this.createOptionsObject.bind(_assertThisInitialized(_this));\n    _this.determinePrice = _this.determinePrice.bind(_assertThisInitialized(_this));\n    _this.combineElements = _this.combineElements.bind(_assertThisInitialized(_this));\n    _this.recursion_generateOptions = _this.recursion_generateOptions.bind(_assertThisInitialized(_this));\n    _this.setData = _this.setData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Engine, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        style: \"auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }), React.createElement(SearchBar, {\n        placeholder: \"How Many Coins Do You Need?\",\n        onChangeText: this.handleChange,\n        value: this.state.target,\n        lightTheme: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.recursionOptions,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: this.returnRenderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Engine;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  item: {\n    backgroundColor: '#ffffff',\n    padding: 20,\n    height: 150,\n    marginVertical: 8,\n    marginHorizontal: 0,\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: 32\n  },\n  button: {\n    width: '25%'\n  },\n  tab: {\n    backgroundColor: '#fff'\n  },\n  divider: {\n    backgroundColor: 'blue'\n  }\n});\nexport default Engine;","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/Engine.js"],"names":["StatusBar","useState","React","SafeAreaProvider","Header","ListItem","Tab","Text","Input","Button","SearchBar","Divider","Icon","uuid","checkIfFactorOf400","target","console","log","checkIfFactorOf800","checkIfFactorOf1700","Engine","props","handleChange","text","setState","Options","recursionOptions","combineElements","state","series","recursion_determinePrice","total","map","value","FourHundred","EightHundred","OneThousandSevenHundred","determinePrice","multiplicator","multiplicand","Math","ceil","createOptionsObject","uniqueID","v1","options","price","optionsObject","id","generateOptionsByFactors","quotient","setData","data","array","set","recursion_generateOptions","prevState","list","optionsString","number","findIndex","obj","push","grouped","count","index","JSON","stringify","returnRenderedOptions","generateOptionsByUniqueSet","label","option","returnRenderItem","item","arr","sum","output","findCombination","remainder","path","entry","i","length","componentDidUpdate","componentDidMount","OptionsWithRemainder","bind","styles","container","Component","StyleSheet","create","flex","backgroundColor","padding","height","marginVertical","marginHorizontal","margin","textAlign","title","fontSize","button","width","tab","divider"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Header } from 'react-native-elements';\nimport { StyleSheet, SafeAreaView, FlatList, View, TextInput } from 'react-native';\nimport { ListItem } from 'react-native-elements';\n// import { Icon } from 'react-native-elements';\nimport { Tab,Text,Input,Button, SearchBar, Divider } from 'react-native-elements';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport uuid from 'react-native-uuid';\n\n// const Item=({option})=> (\n//   <View style={styles.item}>\n//     <Text style={styles.title}>{option}</Text>\n//   </View>\n// )\n\nconst checkIfFactorOf400=(target)=>{\n  console.log(\"checkIfFactorOf400\");\n  return 0;\n\n  // return new Promise(function(resolve,reject){\n  //   if(target % 400 == 0) resolve(true);\n  //   else reject(false);\n  // })\n\n}\n\nconst checkIfFactorOf800=(target)=>{\n  console.log(\"checkIfFactorOf800\");\n\n  // return new Promise(function(resolve,reject){\n  //   if(target % 800 == 0) resolve(true);\n  //   else reject(false);\n  // })\n\n}\n\nconst checkIfFactorOf1700=(target)=>{\n  console.log(\"checkIfFactorOf1700\");\n\n  // return new Promise(function(resolve,reject){\n  //   if(target % 1700 == 0) resolve(true);\n  //   else reject(false);\n  // })\n}\n\n\nclass Engine extends React.Component {\n  \n  constructor(props) {\n\n    super(props);\n    this.state = {\n      target: '',\n      series:[400,800,1700],\n      FourHundred: 6.49,\n      EightHundred: 12.99,\n      OneThousandSevenHundred:25.99,\n      // Array of Key&Value Pairs\n      Options:[],  \n      OptionsWithRemainder:[],\n      recursionOptions:[],\n    };\n\n    this.handleChange=this.handleChange.bind(this);\n    this.generateOptionsByFactors=this.generateOptionsByFactors.bind(this);\n    // this.generateOptionsByUniqueSet=this.generateOptionsByUniqueSet.bind(this);\n    // this.generateOptionsByRandomnMethod=this.generateOptionsByRandomnMethod.bind(this);\n    // this.formOptions=this.formOptions.bind(this);\n    // this.fixOrder=this.fixOrder.bind(this);\n    this.returnRenderItem=this.returnRenderItem.bind(this);\n    this.returnRenderedOptions=this.returnRenderedOptions.bind(this);\n    this.componentDidUpdate=this.componentDidUpdate.bind(this);\n    this.createOptionsObject=this.createOptionsObject.bind(this);\n    this.determinePrice=this.determinePrice.bind(this);\n    this.combineElements=this.combineElements.bind(this);\n    this.recursion_generateOptions=this.recursion_generateOptions.bind(this);\n    this.setData=this.setData.bind(this);\n    // this.findCombination=this.findCombination.bind(this);\n    // this.checkIfFactorOf400=this.checkIfFactorOf400.bind(this);\n    // this.checkIfFactorOf800=this.checkIfFactorOf800.bind(this);\n    // this.checkIfFactorOf1700=this.checkIfFactorOf1700.bind(this);\n\n  }\n\n  handleChange=(text)=>{\n\n    this.setState({ //Empty Options Arrays with New Entry\n      Options:[],\n      recursionOptions:[],\n    })\n\n    console.log(text);\n\n    this.setState({\n      target:text\n      },function(){    \n      // this.generateOptionsByFactors(this.state.target);\n      this.combineElements(this.state.series,this.state.target)\n    })\n\n    console.log(\"state update: \" + this.state.target)\n    \n  }\n\n  // returnPricePerPackage\n\n  recursion_determinePrice=(series)=>{\n\n    let total=0;\n\n    series.map(value=>{\n\n      if(value===400) total+=this.state.FourHundred;\n      if(value===800) total+=this.state.EightHundred;\n      if(value===1700) total+=this.state.OneThousandSevenHundred;\n\n      console.log(\"recursion_determinePrice: value \" + value + \"total: \" + total)\n\n    })\n\n    return total;\n  }\n\n  determinePrice=(multiplicator,multiplicand)=>{\n\n    if(multiplicand==400) return Math.ceil((multiplicator*6.49) * 100) / 100\n    if(multiplicand==800) return multiplicator*12.99;\n    if(multiplicand==1700) return multiplicator*25.99;\n\n  }\n\n  createOptionsObject=(multiplicator,multiplicand)=>{\n\n    let uniqueID=uuid.v1();\n    let options=multiplicator+' x '+multiplicand;\n    let price=this.determinePrice(multiplicator,multiplicand);\n\n    const optionsObject ={\n      id: uniqueID,\n      options: options,\n      price: price,\n    }\n\n    this.setState({\n      Options: [optionsObject]\n    })\n\n  }\n\n  // createOptionsObject=(combination)=>{\n\n    //If Repeating Values Exist\n    //Group Repeating Values\n    \n    //\n  // }\n\n  generateOptionsByFactors=(target)=>{ \n\n    // dividend / divisor = quotient\n    // Can target(dividend) be divided by 400/800/1700 without leaving a remainder?\n    // If so, the divisor of target, and the quotient, make up the option\n\n      if(target % 400 == 0){\n\n        let quotient=target/400; \n        this.createOptionsObject(quotient,400);\n      }\n      \n      if(target % 800 == 0){\n        let quotient=target/800; \n        this.createOptionsObject(quotient,800);\n      }\n\n      if(target % 1700 == 0){\n        let quotient=target/1700;\n        this.createOptionsObject(quotient,1700);\n      }\n\n  \n      // new Promise (function(resolve,reject){\n      //   checkIfFactorOf400(target)\n      // }).then(function(result){\n      //   checkIfFactorOf800(target);\n      // }).then(function(result){\n      //   checkIfFactorOf1700(target);\n      // })\n\n  }\n\n  setData=(data)=>{\n\n    let array=[{}];\n\n    //ASync\n    data.map(set=>{\n\n      console.log(\"setData:Mapping... \" + set);\n      console.log(this.recursion_generateOptions(set));\n      // array.push(this.recursion_generateOptions(set)); // places Objects returned from recursion_generateOptions into array\n\n      this.setState(prevState=>({\n        recursionOptions: [...prevState.recursionOptions,this.recursion_generateOptions(set)]\n      }),function(){    \n        console.log(\"this.state.recursionOptions: \"+ this.state.recursionOptions)\n      })\n\n    })\n\n    // this.setState(prevState=>({\n    //   recursionOptions: [...prevState.recursionOptions,array]\n    // }),function(){    \n    //   console.log(\"this.state.recursionOptions: \"+ this.state.recursionOptions)\n    // })\n    \n\n  }\n\n  recursion_generateOptions=(series)=>{\n\n    let array=[];\n    let list=[];\n\n    console.log(\"recursion_generateOptions series: \" + series);\n\n    let uniqueID=uuid.v1();\n    let optionsString=\"\";\n    let price=this.recursion_determinePrice(series)\n\n    // Group Same Values\n\n    series.map(number=>{\n\n      if(array.findIndex( obj => obj.value === number) ===-1){ // If Group of Numbers Does Not Exist, Create New\n\n        list.push(number);\n        let grouped={};\n        grouped.value=number;\n        grouped.count=1;\n\n        // console.log(\"grouped: \" + grouped + \"number: \" + number)\n\n        \n        array.push(grouped);\n\n      } else { // If Group of Numbers Exist, Add to Group's \"Count\"\n\n        let index=array.findIndex( obj => obj.value == number);\n        array[index].count+=1;\n\n      }\n\n    })\n    console.log(\"array: \" + JSON.stringify(array));\n\n    optionsString=this.returnRenderedOptions(array);\n\n\n    const optionsObject ={\n      id: uniqueID,\n      options: optionsString,\n      price: price,\n    }\n\n    console.log(\"optionsObject: \" + optionsObject)\n\n\n\n    return optionsObject\n\n    // this.setState({\n    //   recursionOptions: [optionsObject],\n    // })\n\n  }\n  \n\n  generateOptionsByUniqueSet=(target)=>{\n    // When the target(divident) is divided by 400/800/1700, does it leave a remainder of 400, or 800?\n    // Is the remainder a multiple of 400?\n    // If so, the divisor of the target, multiplied by the quotient, and the remainder(is a multiple of 400) and it's multiplicator creates an option\n  }\n  \n  returnRenderedOptions=(options)=>{\n\n    console.log(\"returnRenderedOptions: \" + JSON.stringify(options))\n\n    let label=\"\";\n\n    options.map((option)=>{\n      label+=\"\\n\" + option.count + \" of \" +  option.value;\n    })\n    \n    console.log(label);\n\n    return label;\n\n  }\n\n  returnRenderItem=(item)=>{\n    // return <View style={styles.item}>\n    // {/* <Icon name='sc-telegram' type='evilicon' color='#517fa4'/> */}\n    // <Text style={styles.title}>{item.item.options}</Text> \n    // <Text style={styles.title}>{item.item.price}</Text> \n    // {/* For Above Line: Check console.log(item)  */}\n    // </View>\n\n    return <View>\n    {\n        <ListItem bottomDivider>\n          <ListItem.Content>\n            <ListItem.Title> {item.item.options} ${item.item.price} </ListItem.Title>\n            {/* <ListItem.Subtitle>{item.item.options}</ListItem.Subtitle> */}\n          </ListItem.Content>\n        </ListItem>\n    }\n    </View>\n  }\n\n  combineElements=(arr,sum)=>{\n\n    let output=[];\n     console.log(\"Target\" + this.state.target )\n\n    function findCombination(remainder,path,entry){\n      \n      // console.log(\"Calling findCombination Path Values: \" + path)\n\n      if(remainder<0){\n        console.log(\"Breaking Out of Loop: Negative Remainder: Target: \" + remainder*-1 + \" path: \" + path)\n        output.push([...path]);\n        return;\n      }\n  \n      if(remainder === 0){\n        // console.log(\"Breaking Out of Loop: 0 Remainder \" + path)\n        output.push([...path]);\n        return;\n      }\n      \n      // console.log(\"Continuing to Loop with Path Values: \" + path)\n      for(let i=entry; i < arr.length; i++){\n        // console.log(\" Entering 'Path' Values: \" + path )\n        findCombination(remainder-arr[i],[...path,arr[i]],i); // Is operating   a for loop; Repeats this Line Until Broken Out Of; \n        //2\n        //2,2\n        //2,2\n        // console.log(\" Exiting Path Values: \" + path)\n      }\n\n    }\n\n    findCombination(sum,[],0);\n    console.log(output);\n\n    this.setData(output);\n\n    // output.map(set=>{\n    //   this.setData(this.recursion_generateOptions(set));\n    // })\n \n    return output;\n  }\n\n  // fixOrder=()=>{\n\n  // }\n\n  // OptionsWithRemainders=()=>{\n  \n    \n  // }\n\n\n\n  componentDidUpdate=()=>{\n\n    console.log(\"component updated. state: \" + this.state.target)\n    // this.generateOptionsByFactors(this.state.target);\n    // Call functions\n    // this.generateOptionsByUniqueSet();\n    // this.generateOptionsByRandomnMethod();\n\n  }\n\n  componentDidMount=()=>{\n    //Test Function\n    // let arr=[2,3,6,7]\n    // let sum=7;\n    // console.log(this.combineElements(arr,sum));\n  }\n\n  render() {\n\n    return (\nn      <SafeAreaProvider>\n        <SafeAreaView style={styles.container}>\n            {/* Menu */}\n            {/* <Tab indicatorStyle={styles.tab} variant=\"primary\">\n              <Tab.Item indicatorStyle={styles.tab}title=\"Options\" />\n              <Tab.Item indicatorStyle={styles.tab} title=\"Conversion\" />\n            </Tab> */}\n\n            <View style={styles.container}>\n            {/* <Text h4>Enter target </Text> */}\n            {/* <Input onChangeText={this.handleChange} placeholder=\"target\"></Input> */}\n            {/* <Button buttonStyle={styles.button}title=\"Calculate\"/> */}\n            <StatusBar style=\"auto\" />\n\n            <SearchBar\n              placeholder=\"How Many Coins Do You Need?\"\n              onChangeText={this.handleChange}\n              value={this.state.target}\n              lightTheme=\"true\"\n            />\n          \n            {/* <FlatList \n              data={this.state.Options} \n              keyExtractor={item => item.id} \n              renderItem={this.returnRenderItem}>\n            </FlatList> */}\n\n            <FlatList \n              data={this.state.recursionOptions} \n              keyExtractor={item => item.id} \n              renderItem={this.returnRenderItem}>\n            </FlatList>\n{/* \n            <View>\n              {\n                this.state.Options.map((l, i) => (\n                  <ListItem key={i} bottomDivider>\n                    <ListItem.Content>\n                      <ListItem.Title>${l.price}</ListItem.Title>\n                      <ListItem.Subtitle>{l.options}</ListItem.Subtitle>\n                    </ListItem.Content>\n                  </ListItem>\n                ))\n              }\n            </View> */}\n\n            {/* List View */}\n          </View>\n        </SafeAreaView>\n      </SafeAreaProvider>\n  \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    // marginTop: '20%',\n    backgroundColor: '#fff',\n  },\n\n  item: {\n    backgroundColor: '#ffffff',\n    padding: 20,\n    height:150,\n    marginVertical: 8,\n    marginHorizontal: 0,\n    margin:'auto',\n    textAlign:'center',\n  },\n\n  title: {\n    fontSize: 32,\n  },\n\n  button:{\n    width: '25%'\n  },\n\n  tab:{\n    backgroundColor:'#fff',\n  },\n\n  divider: {\n    backgroundColor:'blue',\n    // height:1,\n  }\n\n});\n\nexport default Engine;"]},"metadata":{},"sourceType":"module"}