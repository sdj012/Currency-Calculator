{"ast":null,"code":"import determinePrice from \"./PackagerHelper\";\nimport generateSentence from \"./PackagerHelper\";\nimport uuid from 'react-native-uuid';\nexport default function generateOptions(series) {\n  var array = [];\n  var list = [];\n  console.log(\"generateOptions series: \" + series);\n  var uniqueID = uuid.v1();\n  var optionsString = \"\";\n  var price = determinePrice(series);\n  series.map(function (number) {\n    if (array.findIndex(function (obj) {\n      return obj.value === number;\n    }) === -1) {\n      list.push(number);\n      var grouped = {};\n      grouped.value = number;\n      grouped.count = 1;\n      array.push(grouped);\n    } else {\n      var index = array.findIndex(function (obj) {\n        return obj.value == number;\n      });\n      array[index].count += 1;\n    }\n  });\n  console.log(\"array: \" + JSON.stringify(array));\n  optionsString = generateSentence(array);\n  var optionsObject = {\n    id: uniqueID,\n    options: optionsString,\n    price: price\n  };\n  console.log(\"optionsObject: \" + optionsObject);\n  return optionsObject;\n}","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/List/Utils/Packager.js"],"names":["determinePrice","generateSentence","uuid","generateOptions","series","array","list","console","log","uniqueID","v1","optionsString","price","map","number","findIndex","obj","value","push","grouped","count","index","JSON","stringify","optionsObject","id","options"],"mappings":"AAAA,OAAOA,cAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAGA,eAAe,SAASC,eAAT,CAAyBC,MAAzB,EAAgC;AAE7C,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIC,IAAI,GAAC,EAAT;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BJ,MAAzC;AAEA,MAAIK,QAAQ,GAACP,IAAI,CAACQ,EAAL,EAAb;AACA,MAAIC,aAAa,GAAC,EAAlB;AACA,MAAIC,KAAK,GAACZ,cAAc,CAACI,MAAD,CAAxB;AAIAA,EAAAA,MAAM,CAACS,GAAP,CAAW,UAAAC,MAAM,EAAE;AAEjB,QAAGT,KAAK,CAACU,SAAN,CAAiB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,KAAJ,KAAcH,MAAlB;AAAA,KAApB,MAAiD,CAAC,CAArD,EAAuD;AAErDR,MAAAA,IAAI,CAACY,IAAL,CAAUJ,MAAV;AACA,UAAIK,OAAO,GAAC,EAAZ;AACAA,MAAAA,OAAO,CAACF,KAAR,GAAcH,MAAd;AACAK,MAAAA,OAAO,CAACC,KAAR,GAAc,CAAd;AAKAf,MAAAA,KAAK,CAACa,IAAN,CAAWC,OAAX;AAED,KAZD,MAYO;AAEL,UAAIE,KAAK,GAAChB,KAAK,CAACU,SAAN,CAAiB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,KAAJ,IAAaH,MAAjB;AAAA,OAApB,CAAV;AACAT,MAAAA,KAAK,CAACgB,KAAD,CAAL,CAAaD,KAAb,IAAoB,CAApB;AAED;AAEF,GArBD;AAsBAb,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYc,IAAI,CAACC,SAAL,CAAelB,KAAf,CAAxB;AAEAM,EAAAA,aAAa,GAACV,gBAAgB,CAACI,KAAD,CAA9B;AAEA,MAAMmB,aAAa,GAAE;AACnBC,IAAAA,EAAE,EAAEhB,QADe;AAEnBiB,IAAAA,OAAO,EAAEf,aAFU;AAGnBC,IAAAA,KAAK,EAAEA;AAHY,GAArB;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBgB,aAAhC;AAIA,SAAOA,aAAP;AAED","sourcesContent":["import determinePrice from './PackagerHelper';\nimport generateSentence from './PackagerHelper';\nimport uuid from 'react-native-uuid';\n\n\nexport default function generateOptions(series){ //Packages Array Of Numbers, Determines and Adds Price\n \n  let array=[];\n  let list=[];\n\n  console.log(\"generateOptions series: \" + series);\n\n  let uniqueID=uuid.v1();\n  let optionsString=\"\";\n  let price=determinePrice(series)\n\n  // Group Same Values\n\n  series.map(number=>{\n\n    if(array.findIndex( obj => obj.value === number) ===-1){ // If Group of Numbers Does Not Exist, Create New\n\n      list.push(number);\n      let grouped={};\n      grouped.value=number;\n      grouped.count=1;\n\n      // console.log(\"grouped: \" + grouped + \"number: \" + number)\n\n      \n      array.push(grouped);\n\n    } else { // If Group of Numbers Exist, Add to Group's \"Count\"\n\n      let index=array.findIndex( obj => obj.value == number);\n      array[index].count+=1;\n\n    }\n\n  })\n  console.log(\"array: \" + JSON.stringify(array));\n\n  optionsString=generateSentence(array);\n\n  const optionsObject ={\n    id: uniqueID,\n    options: optionsString,\n    price: price,\n  }\n\n  console.log(\"optionsObject: \" + optionsObject)\n\n\n\n  return optionsObject\n\n}\n"]},"metadata":{},"sourceType":"module"}