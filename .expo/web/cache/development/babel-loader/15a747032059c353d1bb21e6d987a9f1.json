{"ast":null,"code":"import { useSelector, useDispatch } from 'react-redux';\n\nfunction determinePrice(series) {\n  var configurations = useSelector(function (state) {\n    return state.settings.configurations;\n  });\n  var total = 0;\n  series.map(function (value) {\n    total += configurations.find(function (bundle) {\n      return bundle.id === value;\n    }).price;\n    console.log(\"determinePrice: value \" + value + \"total: \" + total);\n  });\n  total = Math.ceil(total * 100) / 100;\n  return total;\n}\n\nfunction generateSentence(options) {\n  console.log(\"generateSentence: \" + JSON.stringify(options));\n  var label = \"\";\n  options.map(function (option) {\n    label += \"\\n\" + option.count + \" of \" + option.value;\n  });\n  console.log(label);\n  return label;\n}\n\nexport { determinePrice, generateSentence };","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/Utils/PackagerHelper.js"],"names":["useSelector","useDispatch","determinePrice","series","configurations","state","settings","total","map","value","find","bundle","id","price","console","log","Math","ceil","generateSentence","options","JSON","stringify","label","option","count"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAA+B;AAE7B,MAAMC,cAAc,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,CAAeF,cAA1B;AAAA,GAAD,CAAlC;AAEA,MAAIG,KAAK,GAAC,CAAV;AAEAJ,EAAAA,MAAM,CAACK,GAAP,CAAW,UAAAC,KAAK,EAAE;AAEhBF,IAAAA,KAAK,IAAIH,cAAc,CAACM,IAAf,CAAoB,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,EAAP,KAAcH,KAAlB;AAAA,KAA1B,EAAmDI,KAA5D;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BN,KAA3B,GAAmC,SAAnC,GAA+CF,KAA3D;AAED,GAND;AAQAA,EAAAA,KAAK,GAACS,IAAI,CAACC,IAAL,CAAUV,KAAK,GAAG,GAAlB,IAAyB,GAA/B;AAEA,SAAOA,KAAP;AACD;;AAGD,SAASW,gBAAT,CAA0BC,OAA1B,EAAkC;AAEhCL,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBK,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAnC;AAEA,MAAIG,KAAK,GAAC,EAAV;AAEAH,EAAAA,OAAO,CAACX,GAAR,CAAY,UAACe,MAAD,EAAU;AACpBD,IAAAA,KAAK,IAAE,OAAOC,MAAM,CAACC,KAAd,GAAsB,MAAtB,GAAgCD,MAAM,CAACd,KAA9C;AACD,GAFD;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEA,SAAOA,KAAP;AAED;;AAED,SAASpB,cAAT,EAAyBgB,gBAAzB","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nfunction determinePrice(series){\n\n  const configurations = useSelector((state) => state.settings.configurations)\n\n  let total=0;\n\n  series.map(value=>{\n\n    total += configurations.find(bundle => bundle.id === value).price\n\n    console.log(\"determinePrice: value \" + value + \"total: \" + total)\n\n  })\n\n  total=Math.ceil(total * 100) / 100;\n\n  return total;\n}\n\n\nfunction generateSentence(options){\n\n  console.log(\"generateSentence: \" + JSON.stringify(options))\n\n  let label=\"\";\n\n  options.map((option)=>{\n    label+=\"\\n\" + option.count + \" of \" +  option.value;\n  })\n  \n  console.log(label);\n\n  return label;\n\n}\n\nexport { determinePrice, generateSentence};"]},"metadata":{},"sourceType":"module"}