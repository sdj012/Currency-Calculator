{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Utils from \"./index\";\nexport default function configureSet(arr, sum) {\n  var output = [];\n\n  function findCombination(remainder, path, entry) {\n    if (remainder < 0) {\n      console.log(\"Breaking Out of Loop: Negative Remainder \" + remainder * -1 + \" path: \" + path);\n      console.log(\"Surplus: \" + remainder * -1 + \"Path: \" + path);\n      output.push(_toConsumableArray(path));\n      return;\n    }\n\n    if (remainder === 0) {\n      output.push(_toConsumableArray(path));\n      return;\n    }\n\n    for (var i = entry; i < arr.length; i++) {\n      findCombination(remainder - arr[i], [].concat(_toConsumableArray(path), [arr[i]]), i);\n    }\n  }\n\n  findCombination(sum, [], 0);\n  console.log(output);\n  Utils.Setter.setData(output);\n  return output;\n}","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/List/Utils/CombinationGenerator.js"],"names":["Utils","configureSet","arr","sum","output","findCombination","remainder","path","entry","console","log","push","i","length","Setter","setData"],"mappings":";AAAA,OAAOA,KAAP;AAEA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA0BC,GAA1B,EAA8B;AAE3C,MAAIC,MAAM,GAAC,EAAX;;AAEA,WAASC,eAAT,CAAyBC,SAAzB,EAAmCC,IAAnC,EAAwCC,KAAxC,EAA8C;AAE5C,QAAGF,SAAS,GAAC,CAAb,EAAe;AACbG,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAA8CJ,SAAS,GAAC,CAAC,CAAzD,GAA6D,SAA7D,GAAyEC,IAArF;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,SAAS,GAAC,CAAC,CAAzB,GAA6B,QAA7B,GAAwCC,IAApD;AACAH,MAAAA,MAAM,CAACO,IAAP,oBAAgBJ,IAAhB;AACA;AACD;;AAED,QAAGD,SAAS,KAAK,CAAjB,EAAmB;AACjBF,MAAAA,MAAM,CAACO,IAAP,oBAAgBJ,IAAhB;AACA;AACD;;AAED,SAAI,IAAIK,CAAC,GAACJ,KAAV,EAAiBI,CAAC,GAAGV,GAAG,CAACW,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCP,MAAAA,eAAe,CAACC,SAAS,GAACJ,GAAG,CAACU,CAAD,CAAd,+BAAsBL,IAAtB,IAA2BL,GAAG,CAACU,CAAD,CAA9B,IAAmCA,CAAnC,CAAf;AACD;AAEF;;AAEDP,EAAAA,eAAe,CAACF,GAAD,EAAK,EAAL,EAAQ,CAAR,CAAf;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEAJ,EAAAA,KAAK,CAACc,MAAN,CAAaC,OAAb,CAAqBX,MAArB;AAEA,SAAOA,MAAP;AAED","sourcesContent":["import Utils from './index';\n\nexport default function configureSet(arr,sum){ // configureSet -> determines set and passes Set to -> setData\n\n  let output=[];\n\n  function findCombination(remainder,path,entry){\n    \n    if(remainder<0){\n      console.log(\"Breaking Out of Loop: Negative Remainder \" + remainder*-1 + \" path: \" + path)\n      console.log(\"Surplus: \" + remainder*-1 + \"Path: \" + path)\n      output.push([...path]);\n      return;\n    }\n\n    if(remainder === 0){\n      output.push([...path]);\n      return;\n    }\n    \n    for(let i=entry; i < arr.length; i++){\n      findCombination(remainder-arr[i],[...path,arr[i]],i); // Is operating   a for loop; Repeats this Line Until Broken Out Of; \n    }\n\n  }\n\n  findCombination(sum,[],0);\n  console.log(output);\n\n  Utils.Setter.setData(output);\n\n  return output;\n  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}