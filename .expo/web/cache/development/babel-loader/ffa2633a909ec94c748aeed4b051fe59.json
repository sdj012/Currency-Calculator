{"ast":null,"code":"import { createSlice, configureStore, counterSlice } from '@reduxjs/toolkit';\nvar test = createSlice({\n  name: 'test',\n  initialState: 0,\n  reducers: {\n    testStore: function testStore(state) {\n      console.log(\"testStore\");\n      state.value += 1;\n    }\n  }\n});\nvar testStore = test.actions.testStore;\nexport { testStore };\nexport default test.reducer;","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/Store/testSlice.js"],"names":["createSlice","configureStore","counterSlice","test","name","initialState","reducers","testStore","state","console","log","value","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,QAA0D,kBAA1D;AAEA,IAAMC,IAAI,GAAGH,WAAW,CAAC;AAEvBI,EAAAA,IAAI,EAAE,MAFiB;AAGvBC,EAAAA,YAAY,EAAE,CAHS;AAIvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,mBAAAC,KAAK,EAAI;AAKlBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAF,MAAAA,KAAK,CAACG,KAAN,IAAc,CAAd;AACD;AARO;AAJa,CAAD,CAAxB;AAiBO,IAAQJ,SAAR,GAAsBJ,IAAI,CAACS,OAA3B,CAAQL,SAAR;;AAEP,eAAeJ,IAAI,CAACU,OAApB","sourcesContent":["import { createSlice, configureStore, counterSlice } from '@reduxjs/toolkit'\n\nconst test = createSlice({\n  //Package\n  name: 'test',\n  initialState: 0,\n  reducers: {\n    testStore: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"testStore\")\n      state.value +=1\n    },\n  }\n})\n\n\nexport const { testStore } = test.actions\n\nexport default test.reducer;\n\n\n// Can still subscribe to the store\n// store.subscribe(() => console.log(store.getState()))\n"]},"metadata":{},"sourceType":"module"}