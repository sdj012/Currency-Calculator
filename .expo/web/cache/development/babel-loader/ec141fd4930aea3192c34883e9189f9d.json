{"ast":null,"code":"import { createSlice, configureStore, counterSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  configurations: [{\n    id: 400,\n    packageCount: 400,\n    price: 6.49\n  }, {\n    id: 800,\n    packageCount: 800,\n    price: 12.99\n  }, {\n    id: 1700,\n    packageCount: 1700,\n    price: 25.99\n  }]\n};\nvar settings = createSlice({\n  name: 'settings',\n  initialState: initialState,\n  reducers: {\n    settingsStore: function settingsStore(state, action) {\n      console.log(\"settingsStore, action.payload = \" + action.payload);\n      state.push(action.payload);\n      console.log(\"settings state.value is: \" + state.value);\n    }\n  }\n});\nvar settingsStore = settings.actions.settingsStore;\nexport { settingsStore };\nexport default settings.reducer;","map":{"version":3,"sources":["/Users/sdj/Desktop/WEB/ReactNativeProject-purchaseGuide-1/my-app/Store/settingsSlice.js"],"names":["createSlice","configureStore","counterSlice","initialState","configurations","id","packageCount","price","settings","name","reducers","settingsStore","state","action","console","log","payload","push","value","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,YAAtC,QAA0D,kBAA1D;AAEA,IAAMC,YAAY,GAAG;AAEnBC,EAAAA,cAAc,EAAC,CAEb;AACEC,IAAAA,EAAE,EAAC,GADL;AAEEC,IAAAA,YAAY,EAAC,GAFf;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAFa,EAQb;AACEF,IAAAA,EAAE,EAAC,GADL;AAEEC,IAAAA,YAAY,EAAC,GAFf;AAGEC,IAAAA,KAAK,EAAC;AAHR,GARa,EAcb;AACEF,IAAAA,EAAE,EAAC,IADL;AAEEC,IAAAA,YAAY,EAAC,IAFf;AAGEC,IAAAA,KAAK,EAAC;AAHR,GAda;AAFI,CAArB;AA0BA,IAAMC,QAAQ,GAAGR,WAAW,CAAC;AAE3BS,EAAAA,IAAI,EAAE,UAFqB;AAG3BN,EAAAA,YAAY,EAAEA,YAHa;AAI3BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,uBAACC,KAAD,EAAOC,MAAP,EAAkB;AAK/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCF,MAAM,CAACG,OAAxD;AACAJ,MAAAA,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACG,OAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BH,KAAK,CAACM,KAAhD;AACD;AATO;AAJiB,CAAD,CAA5B;AAiBO,IAAQP,aAAR,GAA0BH,QAAQ,CAACW,OAAnC,CAAQR,aAAR;;AAEP,eAAeH,QAAQ,CAACY,OAAxB","sourcesContent":["import { createSlice, configureStore, counterSlice } from '@reduxjs/toolkit'\n\nconst initialState = {  \n\n  configurations:[\n\n    {\n      id:400,\n      packageCount:400, \n      price: 6.49,\n    },\n\n    {\n      id:800,\n      packageCount:800,\n      price:12.99, \n    },\n\n    {\n      id:1700,\n      packageCount:1700,\n      price:25.99,\n    }\n  \n  ]\n\n}\n\nconst settings = createSlice({\n  //Package\n  name: 'settings',\n  initialState: initialState,\n  reducers: {\n    settingsStore: (state,action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(\"settingsStore, action.payload = \" + action.payload)\n      state.push(action.payload)\n      console.log(\"settings state.value is: \" + state.value)\n    },\n  }\n})\n\nexport const { settingsStore } = settings.actions\n\nexport default settings.reducer;\n\n\n// Can still subscribe to the store\n// store.subscribe(() => console.log(store.getState()))\n"]},"metadata":{},"sourceType":"module"}